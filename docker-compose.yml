version: '3.9'

networks:
  my_network:

volumes:
  postgres_data:

services:
  postgresdb:
    image: postgres
    environment:
      POSTGRES_PASSWORD: 'admin1pwd'
      POSTGRES_USER: 'admin'
      POSTGRES_DB: 'service_order'
    networks:
      - my_network
    ports:
      - "5431:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin admin1pwd -d service_order" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - .:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - my_network

  api:
    build: .
    depends_on:
      - postgresdb
    restart:
      always
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    networks:
      - my_network
    volumes:
      - ./:/src/

  celery_worker:
    build:
      context: .
    command: sh -c "celery -A django_celery_email.celery.app worker -c 2 -l info"
    depends_on:
      - api
      - postgresdb
    networks:
      - my_network

